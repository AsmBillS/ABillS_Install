#OS CentOS 6_x86
#COMMENTS CentOS comments
#M update:upgrade:yum -y update
#M mysql:MySQL:_install_mysql
#M apache:apache:_install_httpd
#M perl_modules:Perl_modules:_install_perl_modules
#M freeradius:Freeradius_Server:_install_freeradius
#M DHCP:Dhcp_server:_install_dhcp
#dM Mail:Mail_server:install_mail
# MRTG=
# IPN=
# fsbackup=
# perl_speedy 
#M utils:Utils:_install_utils

# Variable

WEB_SERVER_USER=apache
APACHE_CONF_DIR=/etc/httpd/conf.d
RESTART_MYSQL=/etc/init.d/mysqld
RESTART_RADIUS=/etc/init.d/radiusd
RESTART_APACHE=/etc/init.d/httpd
RESTART_DHCP=/etc/init.d/dhcpd
PING=/bin/ping

#*******************************************
#  Pre install
#*******************************************
pre_install() {
  #yum -y install wget tmux bash;
  #_install_epel;
  CURRENT_DIR=`pwd`
}

#*********************************************************
#  Install MySQL
#*********************************************************
_install_mysql(){
  yum -y install mysql-server
  mysql_install_db --user=mysql --ldata=/var/lib/mysql
  chown -R mysql:mysql /var/lib/mysql
  chkconfig mysqld on
}

#*********************************************************
#  Install apache
#*********************************************************
_install_httpd(){
  yum -y install httpd httpd-devel httpd-tools mod_perl
  chkconfig httpd on
  service httpd start
  
   echo "#########        Opening firewall ports         ############" 
  iptables -I INPUT -p tcp --dport 80 -m state --state NEW -j ACCEPT
  iptables -I INPUT -p tcp --dport 9443 -m state --state NEW -j ACCEPT
  service iptables save
 echo "#########        Disabling selinux               ############"
   STATUS=`cat /etc/selinux/config | grep 'SELINUX=' | grep -v 'SELINUX='`
   echo "CURRENT STATUS is ${STATUS}"
   sed 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config > config2
   cat config2 > /etc/selinux/config
   rm -f config2
   STATUS=`cat /etc/selinux/config | grep 'SELINUX=' | grep -v 'SELINUX='`
   echo "CURRENT STATUS is ${STATUS}"
}
#*********************************************************
#  Install EPEL repository CentOS (RedHat)
#*********************************************************
_install_epel() {
 wget http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
 rpm -ivh epel-release-6-8.noarch.rpm
 rm -f ${CURRENT_DIR}epel-release-6-8.noarch.rpm*
}

#*********************************************************
#  Install Perl modules
#*********************************************************
_install_perl_modules() {
 yum -y install expat-devel expat mod_ssl openssl openssl-devel perl-DBI perl-DBD-MySQL perl-Crypt-PasswdMD5 perl-Digest-SHA1 perl-Time-HiRes
}

#*******************************************
#  Radius 
#*******************************************
_install_freeradius() {
  
  if [ -d /usr/local/freeradius/ ]; then
    echo "Radius exists: /usr/local/freeradius/";
    return 0 ;
  fi;
  
yum -y install gcc perl-ExtUtils-Embed gdbm gdbm-devel mysql-devel
  
PERL_LIB_DIRS="/usr/lib/perl5/CORE"
  
for dir in ${PERL_LIB_DIRS}; do
  if [ "${DEBUG}" = 1 ]; then
    echo "ls ${dir}/libperl* | head -1"  
  fi;

  PERL_LIB=`ls ${dir}/libperl* | head -1`;
  if [ x"${PERL_LIB}" != x ]; then
    PERL_LIB_DIR=${dir}
    if [ ! -f ${PERL_LIB_DIR}/libperl.so ]; then
      ln -s ${PERL_LIB} ${PERL_LIB_DIR}libperl.so
    fi;
  fi;
done;


if [ x"${PERL_LIB_DIR}" = x ]; then
  echo "Perl lib not found";
  exit;
else
  echo "Perl lib: ${PERL_LIB_DIR}libperl.so"
fi;

FREERADIUS_VERSION="2.2.7"
${RADIUS_SERVER_USER}="freerad"
wget freeradius-server-${FREERADIUS_VERSION}.tar.gz ftp://ftp.freeradius.org/pub/freeradius/freeradius-server-${FREERADIUS_VERSION}.tar.gz

if [ ! -f freeradius-server-${FREERADIUS_VERSION}.tar.gz ]; then
  echo "Can\'t download freeradius. PLease download and install manual";
  exit;
fi;

tar zxvf freeradius-server-${FREERADIUS_VERSION}.tar.gz
rm -f freeradius-server-${FREERADIUS_VERSION}.tar.gz

cd freeradius-server-${FREERADIUS_VERSION}
./configure --prefix=/usr/local/freeradius --with-rlm-perl-lib-dir=${PERL_LIB_DIR} --without-openssl --with-dhcp > 1
echo "./configure --prefix=/usr/local/freeradius --with-rlm-perl-lib-dir=${PERL_LIB_DIR} --without-openssl --with-dhcp " > configure_abills
make && make install

ln -s /usr/local/freeradius/sbin/radiusd /usr/sbin/radiusd

#Add user
groupadd ${RADIUS_SERVER_USER}
useradd -g ${RADIUS_SERVER_USER} -s /bash/bash ${RADIUS_SERVER_USER}
chown -R ${RADIUS_SERVER_USER}:${RADIUS_SERVER_USER} /usr/local/freeradius/etc/raddb
#mkdir /var/run/radiusd
#chown -R ${RADIUS_SERVER_USER}:${RADIUS_SERVER_USER} /var/run/radiusd

cat << 'EOF' > /etc/init.d/radiusd
#!/bin/sh
#
# radiusd	Start the radius daemon.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
#
#    Copyright (C) 2001-2008 The FreeRADIUS Project http://www.freeradius.org
#   chkconfig: - 58 74
#   description: radiusd is service access provider Daemon.
### BEGIN INIT INFO
# Provides: radiusd
# Should-Start: radiusd
# Should-Stop: radiusd
# Short-Description: start and stop radiusd
# Description: radiusd is access provider service Daemon.
### END INIT INFO

prefix=/usr/local/freeradius
exec_prefix=${prefix}
sbindir=${exec_prefix}/sbin
localstatedir=/var
logdir=${localstatedir}/log/radius
rundir=${localstatedir}/run/radiusd
sysconfdir=${prefix}/etc

#
#  If you have issues with OpenSSL, uncomment these next lines.
#
#  Something similar may work for MySQL, and you may also
#  have to LD_PRELOAD libz.so
#
#LD_LIBRARY_PATH=
#LD_RUN_PATH=:
#LD_PRELOAD=libcrypto.so
export LD_LIBRARY_PATH LD_RUN_PATH LD_PRELOAD

RADIUSD=$sbindir/radiusd
RADDBDIR=${sysconfdir}/raddb
RADIUS_USER='freerad'
DESC="FreeRADIUS"

#
#  See 'man radiusd' for details on command-line options.
#
ARGS=""

test -f $RADIUSD || exit 0
test -f $RADDBDIR/radiusd.conf || exit 0

if [ ! -d $rundir ] ; then
    mkdir $rundir
    chown ${RADIUS_USER}:${RADIUS_USER} $rundir
    chmod 775 $rundir
fi

if [ ! -d $logdir ] ; then
    mkdir $logdir
    chown ${RADIUS_USER}:${RADIUS_USER} $logdir
    chmod 770 $logdir
    chmod g+s $logdir
fi

if [ ! -f $logdir/radius.log ]; then
        touch $logdir/radius.log
fi

chown ${RADIUS_USER}:${RADIUS_USER} $logdir/radius.log
chown -R ${RADIUS_USER}:${RADIUS_USER} /usr/local/freeradius/etc/raddb
mkdir /var/run/radiusd/
chown -R ${RADIUS_USER}:${RADIUS_USER} /var/run/radiusd/
chmod 660 $logdir/radius.log

case "$1" in
  start)
	echo -n "Starting $DESC:"
	$RADIUSD $ARGS
	echo "radiusd"
	;;
  stop)
	[ -z "$2" ] && echo -n "Stopping $DESC: "
        [ -f $rundir/radiusd.pid ] && kill -TERM `cat $rundir/radiusd.pid`
	[ -z "$2" ] && echo "radiusd."
	;;
  reload|force-reload)
	echo "Reloading $DESC configuration files."
	[ -f $rundir/radiusd.pid ] && kill -HUP `cat $rundir/radiusd.pid`
	;;
  restart)
	sh $0 stop quiet
	sleep 3
	sh $0 start
	;;
  check)
	$RADIUSD -CX $ARGS
	exit $?
	;;
  *)
        echo "Usage: /etc/init.d/$RADIUS {start|stop|reload|restart|check}"
        exit 1
esac

exit 0
EOF

chmod +x /etc/init.d/radiusd
chkconfig radiusd add
chkconfig radiusd on
  
}

#*******************************************
#  Dhcp server
#*******************************************
_install_dhcp() {
  yum -y install dhcp
}

#*******************************************
#  Utils 
#*******************************************
_install_utils() {
  yum -y install vim tmux bash git
}



